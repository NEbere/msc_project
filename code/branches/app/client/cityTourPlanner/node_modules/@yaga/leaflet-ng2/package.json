{
  "_from": "@yaga/leaflet-ng2",
  "_id": "@yaga/leaflet-ng2@1.0.0",
  "_inBundle": false,
  "_integrity": "sha512-8qVI9xophJbMfDeCbHfW91+ksI6snolFV25jw7sg1bpPUVNReWjLGbZEIgshyToppcwKRx0OxHQMb9JvK3bt7w==",
  "_location": "/@yaga/leaflet-ng2",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "@yaga/leaflet-ng2",
    "name": "@yaga/leaflet-ng2",
    "escapedName": "@yaga%2fleaflet-ng2",
    "scope": "@yaga",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@yaga/leaflet-ng2/-/leaflet-ng2-1.0.0.tgz",
  "_shasum": "c441a177c5f343218ea013e15c71b9b829fef8b0",
  "_spec": "@yaga/leaflet-ng2",
  "_where": "/Applications/sandbox/msc_project/code/branches/app/client/cityTourPlanner",
  "author": {
    "name": "YAGA - Development Team",
    "email": "info@yagajs.org"
  },
  "bugs": {
    "url": "https://github.com/yagajs/leaflet-ng2/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Arne Schubert",
      "email": "atd@yagajs.org",
      "url": "https://atd.yagajs.org"
    },
    {
      "name": "Stephan Herritsch",
      "email": "s.herritsch@yagajs.org",
      "url": "https://steve.yagajs.org"
    },
    {
      "name": "Markus Strauss",
      "email": "markus@yagajs.org",
      "url": "https://markus.yagajs.org"
    }
  ],
  "dependencies": {
    "@types/geojson": "^7946.0.4",
    "@types/leaflet": "^1.2.8",
    "leaflet": "^1.3.2"
  },
  "deprecated": false,
  "description": "Angular2 module for Leaflet",
  "devDependencies": {
    "@angular/common": "^7.1.0",
    "@angular/compiler": "^7.1.0",
    "@angular/compiler-cli": "^7.1.0",
    "@angular/core": "^7.1.0",
    "@angular/forms": "^7.1.0",
    "@angular/platform-browser": "^7.1.0",
    "@angular/platform-browser-dynamic": "^7.1.0",
    "@types/chai": "^4.1.4",
    "@types/mocha": "^5.2.5",
    "bootstrap": "^4.1.3",
    "browserify": "^16.2.2",
    "chai": "^4.1.2",
    "coveralls": "^3.0.2",
    "font-awesome": "^4.7.0",
    "istanbul": "^0.4.5",
    "jquery": "^3.3.1",
    "jsdom": "^13.0.0",
    "jsdom-global": "^3.0.2",
    "mocha": "^5.2.0",
    "reflect-metadata": "^0.1.8",
    "rxjs": "^6.2.2",
    "rxjs-compat": "^6.2.2",
    "tslint": "^5.11.0",
    "typedoc": "^0.13.0",
    "typescript": "^3.1.6",
    "zone.js": "^0.7.0"
  },
  "homepage": "https://github.com/yagajs/leaflet-ng2#readme",
  "keywords": [
    "spatial",
    "geo",
    "leaflet",
    "angular",
    "directive",
    "component",
    "angular2",
    "webmapping"
  ],
  "license": "ISC",
  "main": "lib/index.js",
  "name": "@yaga/leaflet-ng2",
  "peerDependencies": {
    "@angular/core": ">=2.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yagajs/leaflet-ng2.git"
  },
  "scripts": {
    "browser-test": "npm run transpile; browserify test/index.js -o browser-test/bundle.js",
    "build-examples": "set -x && npm run transpile && cd examples && tsc; browserify polyline-directive/index.js -o polyline-directive/bundle.js && browserify polygon-directive/index.js -o polygon-directive/bundle.js && browserify rectangle-directive/index.js -o rectangle-directive/bundle.js && browserify tooltip-directive/index.js -o tooltip-directive/bundle.js && browserify popup-directive/index.js -o popup-directive/bundle.js && browserify geojson-directive/index.js -o geojson-directive/bundle.js && browserify tile-layer-directive/index.js -o tile-layer-directive/bundle.js  && browserify wms-layer-directive/index.js -o wms-layer-directive/bundle.js && browserify map-component/index.js -o map-component/bundle.js && browserify zoom-control-directive/index.js -o zoom-control-directive/bundle.js && browserify layers-control-directive/index.js -o layers-control-directive/bundle.js && browserify scale-control-directive/index.js -o scale-control-directive/bundle.js && browserify attribution-control-directive/index.js -o attribution-control-directive/bundle.js && browserify circle-marker-directive/index.js -o circle-marker-directive/bundle.js && browserify image-overlay-directive/index.js -o image-overlay-directive/bundle.js && browserify icon-directive/index.js -o icon-directive/bundle.js && browserify div-icon-directive/index.js -o div-icon-directive/bundle.js && browserify passau/index.js -o passau/bundle.js && browserify circle-directive/index.js -o circle-directive/bundle.js && browserify marker-directive/index.js -o marker-directive/bundle.js && browserify floor-plan/index.js -o floor-plan/bundle.js",
    "clean": "rm -Rf coverage browser-test/bundle.js lib node_modules",
    "doc": "typedoc --out ./typedoc/ --mode file ts/",
    "docker:browser-test": "docker-compose run --rm bob npm run browser-test",
    "docker:build-examples": "docker-compose run --rm bob npm run build-examples",
    "docker:clean": "docker-compose run --rm bob npm run clean",
    "docker:doc": "docker-compose run --rm bob npm run doc",
    "docker:init": "docker-compose run --rm bob npm run init",
    "docker:lint": "docker-compose run --rm bob npm run lint",
    "docker:reinit": "docker-compose run --rm bob npm run reinit",
    "docker:test": "docker-compose run --rm bob npm run test",
    "docker:transpile": "docker-compose run --rm bob npm run transpile",
    "init": "npm install",
    "lint": "tslint ts/*.ts",
    "reinit": "npm run clean; npm run init",
    "test": "npm run lint && npm run transpile && istanbul cover _mocha -- -- test/*.js",
    "transpile": "ngc && mv lib/ts/* lib/ && rm -Rf lib/node_modules lib/ts"
  },
  "types": "lib/index.d.ts",
  "version": "1.0.0"
}
