var cov_5v1wxwrq1=function(){var path="/Applications/sandbox/msc_project/code/branches/app/server/config/passport.js";var hash="a6d532f5c08ee0855706338d4a1dae3d4749e4c4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Applications/sandbox/msc_project/code/branches/app/server/config/passport.js",statementMap:{"0":{start:{line:1,column:20},end:{line:1,column:52}},"1":{start:{line:2,column:19},end:{line:2,column:53}},"2":{start:{line:3,column:13},end:{line:3,column:38}},"3":{start:{line:5,column:18},end:{line:5,column:56}},"4":{start:{line:7,column:0},end:{line:18,column:1}},"5":{start:{line:8,column:13},end:{line:8,column:15}},"6":{start:{line:9,column:2},end:{line:9,column:67}},"7":{start:{line:10,column:2},end:{line:10,column:30}},"8":{start:{line:12,column:2},end:{line:17,column:6}},"9":{start:{line:13,column:17},end:{line:13,column:77}},"10":{start:{line:15,column:4},end:{line:15,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:17},end:{line:7,column:18}},loc:{start:{line:7,column:37},end:{line:18,column:1}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:37},end:{line:12,column:38}},loc:{start:{line:12,column:66},end:{line:17,column:3}},line:12}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0,"1":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"a6d532f5c08ee0855706338d4a1dae3d4749e4c4"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const JwtStrategy=(cov_5v1wxwrq1.s[0]++,require('passport-jwt').Strategy);const ExtractJwt=(cov_5v1wxwrq1.s[1]++,require('passport-jwt').ExtractJwt);const User=(cov_5v1wxwrq1.s[2]++,require('../models').user);const dbSecret=(cov_5v1wxwrq1.s[3]++,'9fa0fa96-7758-11e9-8f9e-2a86e4085a59');cov_5v1wxwrq1.s[4]++;module.exports=function(passport){cov_5v1wxwrq1.f[0]++;let opts=(cov_5v1wxwrq1.s[5]++,{});cov_5v1wxwrq1.s[6]++;opts.jwtFromRequest=ExtractJwt.fromAuthHeaderWithScheme("jwt");cov_5v1wxwrq1.s[7]++;opts.secretOrKey=dbSecret;cov_5v1wxwrq1.s[8]++;passport.use(new JwtStrategy(opts,async(jwt_payload,done)=>{cov_5v1wxwrq1.f[1]++;const user=(cov_5v1wxwrq1.s[9]++,await User.findOne({where:{id:jwt_payload.id},raw:true}));cov_5v1wxwrq1.s[10]++;return done(null,user);}));};